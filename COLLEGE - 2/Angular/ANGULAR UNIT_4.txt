----------------------------------------------------------------------------------------------------------
<Q1>

<!-- component.html -->

<form #myForm="ngForm" (ngSubmit)="onSubmit(myForm)">
  <label for="name">Name:</label>
  <input type="text" id="name" name="name" ngModel required>

  <label for="address">Address:</label>
  <input type="text" id="address" name="address" ngModel pattern="[a-zA-Z0-9 ]+" required>

  <label for="city">City:</label>
  <input type="text" id="city" name="city" ngModel pattern="[a-zA-Z]+" required>

  <label for="postcode">Postcode:</label>
  <input type="text" id="postcode" name="postcode" ngModel pattern="[0-9]{6}" required>

  <button type="submit">Submit</button>
</form>

// component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'my-component',
  templateUrl: './component.html',
  styleUrls: ['./component.css']
})
export class MyComponent {
  onSubmit(form: any) {
    if (form.valid) {
      alert(`Name: ${form.value.name}\nAddress: ${form.value.address}\nCity: ${form.value.city}\nPostcode: ${form.value.postcode}`);
    }
  }
}

----------------------------------------------------------------------------------------------------------
<Q2>

<!-- component.html -->

<form #myForm="ngForm" (ngSubmit)="onSubmit(myForm)">
  <label for="firstname">First Name:</label>
  <input type="text" id="firstname" name="firstname" ngModel pattern="[a-zA-Z ]+" required>

  <label for="lastname">Last Name:</label>
  <input type="text" id="lastname" name="lastname" ngModel pattern="[a-zA-Z ]+" required>

  <label for="email">Email:</label>
  <input type="email" id="email" name="email" ngModel pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}" required>

  <label for="gender">Gender:</label>
  <select id="gender" name="gender" ngModel required>
    <option value="">Select Gender</option>
    <option value="male">Male</option>
    <option value="female">Female</option>
    <option value="other">Other</option>
  </select>

  <button type="submit">Submit</button>
</form>

// component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'my-component',
  templateUrl: './component.html',
  styleUrls: ['./component.css']
})
export class MyComponent {
  onSubmit(form: any) {
    if (form.valid) {
      const formData = form.value;
      const output = `First Name: ${formData.firstname}\nLast Name: ${formData.lastname}\nEmail: ${formData.email}\nGender: ${formData.gender}`;
      document.getElementById('output').innerHTML = output;
    }
  }
}

----------------------------------------------------------------------------------------------------------
<Q3>

import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent implements OnInit {
  registerForm: FormGroup;
  submitted: boolean = false;

  constructor(private formBuilder: FormBuilder) { }

  ngOnInit(): void {
    this.registerForm = this.formBuilder.group({
      email: new FormControl('', [Validators.required, Validators.email]),
      password: new FormControl('', [
        Validators.required,
        Validators.minLength(6),
        Validators.maxLength(12),
        Validators.pattern('[*]{4}')
      ]),
      confirmPassword: new FormControl('', Validators.required)
    }, { validator: this.passwordMatchValidator });
  }

  get email() {
    return this.registerForm.get('email');
  }

  get password() {
    return this.registerForm.get('password');
  }

  get confirmPassword() {
    return this.registerForm.get('confirmPassword');
  }

  passwordMatchValidator(formGroup: FormGroup) {
    const password = formGroup.get('password').value;
    const confirmPassword = formGroup.get('confirmPassword').value;
    if (password !== confirmPassword) {
      formGroup.get('confirmPassword').setErrors({ passwordMatch: true });
    }
  }

  onSubmit() {
    this.submitted = true;
  }
}


<div>
  <h2>Register</h2>
  <form [formGroup]="registerForm" (ngSubmit)="onSubmit()">
    <div>
      <label>Email</label>
      <input type="email" formControlName="email" />
      <div *ngIf="email.touched && email.invalid">
        <div *ngIf="email.errors.required">Email is required.</div>
        <div *ngIf="email.errors.email">Email must be valid.</div>
      </div>
    </div>
    <div>
      <label>Password</label>
      <input type="password" formControlName="password" />
      <div *ngIf="password.touched && password.invalid">
        <div *ngIf="password.errors.required">Password is required.</div>
        <div *ngIf="password.errors.pattern">
          Password must be between 6 to 12 character long and pattern like '****'.
        </div>
      </div>
    </div>
    <div>
      <label>Retype Password</label>
      <input type="password" formControlName="confirmPassword" />
      <div *ngIf="confirmPassword.touched && confirmPassword.invalid">
        <div *ngIf="confirmPassword.errors.required">Confirm Password is required.</div>
        <div *ngIf="confirmPassword.errors.passwordMatch">
          Password and Confirm Password must match.
        </div>
      </div>
    </div>
    <button type="submit" [disabled]="registerForm.invalid">Register</button>
  </form>
</div>
<div *ngIf="submitted">
  <h2>Form Results</h2>
  <div>Email: {{registerForm.value.email}}</div>
  <div>Password: {{registerForm.value.password}}</div>
  <div>Confirm Password: {{registerForm.value.confirmPassword}}</div>
</div>

----------------------------------------------------------------------------------------------------------
<Q4>

ng generate component product-form --skip-tests --type=scss

import { FormsModule, ReactiveFormsModule } from '@angular/forms';

@NgModule({
  imports: [
    FormsModule,
    ReactiveFormsModule,
    // other modules
  ],
  // other configurations
})
export class AppModule { }

<form [formGroup]="productForm" (ngSubmit)="onSubmit()">
  <div>
    <label for="productName">Product Name</label>
    <input type="text" id="productName" formControlName="productName">
    <div *ngIf="productName.invalid && (productName.dirty || productName.touched)">
      <div *ngIf="productName.errors.required">Product Name is required.</div>
    </div>
  </div>
  <div>
    <label for="quantity">Quantity</label>
    <input type="number" id="quantity" formControlName="quantity">
    <div *ngIf="quantity.invalid && (quantity.dirty || quantity.touched)">
      <div *ngIf="quantity.errors.required">Quantity is required.</div>
      <div *ngIf="quantity.errors.pattern">Quantity must be in digits only.</div>
    </div>
  </div>
  <div>
    <label for="price">Price</label>
    <input type="number" id="price" formControlName="price">
    <div *ngIf="price.invalid && (price.dirty || price.touched)">
      <div *ngIf="price.errors.required">Price is required.</div>
      <div *ngIf="price.errors.pattern">Price must be in digits only.</div>
    </div>
  </div>
  <button type="submit" [disabled]="!productForm.valid">Submit</button>
</form>

import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-product-form',
  templateUrl: './product-form.component.html',
  styleUrls: ['./product-form.component.scss']
})
export class ProductFormComponent implements OnInit {

  productForm: FormGroup;

  constructor(private formBuilder: FormBuilder) { }

  ngOnInit(): void {
    this.productForm = this.formBuilder.group({
      productName: ['', Validators.required],
      quantity: ['', [Validators.required, Validators.pattern('^[0-9]*$')]],
      price: ['', [Validators.required, Validators.pattern('^[0-9]*$')]]
    });
  }

  onSubmit() {
    const totalPrice = this.productForm.value.quantity * this.productForm.value.price;
    alert(`Total Price: $${totalPrice}`);
  }

  get productName() { return this.productForm.get('productName'); }
  get quantity() { return this.productForm.get('quantity'); }
  get price() { return this.productForm.get('price'); }

}

----------------------------------------------------------------------------------------------------------
<Q5>

<form [formGroup]="productForm" (ngSubmit)="onSubmit()">
  <label>Customer Name:</label>
  <input type="text" formControlName="customerName"><br><br>
  
  <label>Principal:</label>
  <input type="number" formControlName="principal"><br><br>
  
  <label>Rate:</label>
  <input type="number" formControlName="rate"><br><br>
  
  <label>Years:</label>
  <input type="number" formControlName="years"><br><br>
  
  <button type="submit" [disabled]="productForm.invalid">Submit</button>
</form>

<div *ngIf="result">
  <h2>Simple Interest: {{ result }}</h2>
</div>

import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-product-form',
  templateUrl: './product-form.component.html',
  styleUrls: ['./product-form.component.css']
})
export class ProductFormComponent implements OnInit {
  productForm: FormGroup;
  result: number;

  constructor(private fb: FormBuilder) { }

  ngOnInit() {
    this.productForm = this.fb.group({
      customerName: ['', [Validators.required]],
      principal: ['', [Validators.required]],
      rate: ['', [Validators.required]],
      years: ['', [Validators.required]]
    });
  }

  onSubmit() {
    const principal = this.productForm.value.principal;
    const rate = this.productForm.value.rate;
    const years = this.productForm.value.years;

    this.result = (principal * rate * years) / 100;
  }
}

----------------------------------------------------------------------------------------------------------
<Q6>

ng generate component EmployeeForm

<form #employeeForm="ngForm" (ngSubmit)="calculateMonthlySalary()">
  <div class="form-group">
    <label for="employeeId">Employee ID:</label>
    <input type="text" id="employeeId" name="employeeId" class="form-control" ngModel required pattern="[a-zA-Z0-9]{3,6}">
  </div>
  <div class="form-group">
    <label for="employeeName">Employee Name:</label>
    <input type="text" id="employeeName" name="employeeName" class="form-control" ngModel required>
  </div>
  <div class="form-group">
    <label for="salaryPerDay">Salary Per Day:</label>
    <input type="number" id="salaryPerDay" name="salaryPerDay" class="form-control" ngModel required>
  </div>
  <div class="form-group">
    <label for="totalDays">Total Days:</label>
    <input type="number" id="totalDays" name="totalDays" class="form-control" ngModel required>
  </div>
  <button type="submit" class="btn btn-primary">Calculate Monthly Salary</button>
</form>

import { Component } from '@angular/core';

@Component({
  selector: 'app-employee-form',
  templateUrl: './employee-form.component.html',
  styleUrls: ['./employee-form.component.css']
})
export class EmployeeFormComponent {
  employeeId: string;
  employeeName: string;
  salaryPerDay: number;
  totalDays: number;
  monthlySalary: number;

  calculateMonthlySalary() {
    this.monthlySalary = this.salaryPerDay * this.totalDays;
  }
}

<app-employee-form></app-employee-form>

----------------------------------------------------------------------------------------------------------